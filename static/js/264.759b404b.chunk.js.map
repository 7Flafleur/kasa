{"version":3,"file":"static/js/264.759b404b.chunk.js","mappings":"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","sources":["components/Collapse.jsx","components/Slideshow.jsx","components/Star.jsx","components/Tag.jsx","pages/Property.jsx","pages/PropertyFetcher.jsx"],"sourcesContent":["import { useState } from \"react\";\r\nimport '../styles/collapse.scss'\r\nimport chevdown from \"../assets/chevdown.png\"\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport default function Collapse(props){\r\n\r\n    const [isOpen,setIsOpen] = useState(false);\r\n\r\n         \r\n    const content= Array.isArray(props.content) ? props.content : [props.content]\r\n    \r\n\r\n    function handleClick() {\r\n        setIsOpen(!isOpen);\r\n      \r\n    }\r\n\r\n    return(\r\n        <ul className=\"Collapse\">\r\n            {/* {isOpen ? \"The dropdown is open\" : \"The dropdown is closed\"} */}\r\n            <div className=\"dropdown\"><span className=\"keyword\">{props.keyword}</span>\r\n            <span className={`icons ${isOpen ? \"rotated\" : \"\"}`} onClick={handleClick}>\r\n    <img src={chevdown} alt=\"\" />\r\n</span>\r\n            </div>\r\n         <div className={`licontainer ${props.subclass}`} >\r\n             {content.map((contentItem,index )=> (<li  key={index} className={`collapse_content ${isOpen? \"visible\" : \"hidden\"  }`}>{contentItem}</li>\r\n             ))}\r\n         </div>\r\n        </ul>\r\n    )\r\n\r\n\r\n}\r\n\r\nCollapse.propTypes = {\r\n    content: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.arrayOf(PropTypes.string)\r\n    ]).isRequired,\r\n    keyword: PropTypes.string.isRequired,\r\n    subclass: PropTypes.string,\r\n};\r\n\r\n\r\n\r\n","import { useParams } from \"react-router-dom\"\r\nimport { useState, useEffect } from \"react\";\r\nimport { getLogement } from \"../dataretrieval\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport default function Carousel(props) {\r\n\r\n    const [activeIndex, setActiveIndex] = useState(0);\r\n\r\n\r\n    const logement = props.logement\r\n\r\n\r\n\r\n\r\n    const pictures = logement.pictures;\r\n\r\n    function previousItem() {\r\n        setActiveIndex(prevActiveIndex => (prevActiveIndex - 1 + pictures.length) % pictures.length);\r\n    }\r\n\r\n    function nextItem() {\r\n        setActiveIndex(prevActiveIndex => (prevActiveIndex + 1) % pictures.length);\r\n    }\r\n\r\n    return (\r\n        <ul className=\"carousel\">\r\n\r\n\r\n\r\n\r\n            {\r\n                pictures.map((picture, index) => (\r\n                    <li key={index}>\r\n                        <figure className={`carouselItem ${index === activeIndex ? \"active\" : \"\"}`}>\r\n                            <img className=\"picture\" src={picture} alt={`${logement.title}`} />\r\n\r\n                            <FontAwesomeIcon className=\"btn prev\" icon={faChevronLeft} onClick={previousItem} />\r\n\r\n\r\n\r\n                            <FontAwesomeIcon className=\"btn next\" icon={faChevronRight} onClick={nextItem} />\r\n                            <span className=\"index\">{index + 1}/{pictures.length}</span>\r\n\r\n                        </figure>\r\n                    </li>\r\n                ))\r\n            }\r\n        </ul>\r\n    )\r\n}\r\n\r\n\r\nCarousel.propTypes = {\r\n    logement: PropTypes.shape({\r\n        title: PropTypes.string.isRequired,\r\n        pictures: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n        // Include other properties of logement here...\r\n    }).isRequired,\r\n};","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faStar } from '@fortawesome/free-solid-svg-icons'\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport function Star(props) {\r\n    return (\r\n        <FontAwesomeIcon\r\n            className={`star ${props.filled ? 'filled' : ''}`}\r\n            icon={faStar}\r\n            style={{ color: props.filled ? '#ff6060' : 'grey' }}\r\n        />\r\n    );\r\n}\r\n\r\n\r\nStar.propTypes = {\r\n    filled: PropTypes.bool,\r\n\r\n};","\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function Tag(props){\r\n\r\n    return(\r\n        <span className=\"tag\">{props.taginfo}</span>\r\n\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n\r\n\r\nTag.propTypes = {\r\n    taginfo: PropTypes.string.isRequired,\r\n};","import { getLogement } from \"../dataretrieval\";\r\nimport Carousel from \"../components/Slideshow\"\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Collapse from \"../components/Collapse\";\r\nimport { Star } from \"../components/Star\";\r\nimport Tag from \"../components/Tag\";\r\nimport { useEffect } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n \r\n\r\n\r\n\r\n\r\nexport default function Property(props) {\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const logement = props.logement;\r\n\r\n\r\n  // gÃ©rer cote asynchrone\r\n\r\n  useEffect(() => {\r\n    \r\n    if (logement === undefined) {\r\n      navigate(\"/Property/404\");\r\n    }\r\n  }, [logement]);\r\n\r\n  if (logement === undefined) {\r\n    return null;\r\n  }\r\n\r\n\r\n\r\n  const equipements = logement.equipments.map(equipement => equipement)\r\n\r\n\r\n\r\n  const tags = logement.tags;\r\n\r\n  const rating = logement.rating;\r\n\r\n  return (\r\n    <div className=\"property\">\r\n      <Carousel logement={logement} />\r\n      <div className=\"property_infos\">\r\n        <div className=\"left\">\r\n          <div className=\"infotitle\">\r\n            <h1>{logement.title}</h1>\r\n            <h2>{logement.location}</h2>\r\n          </div>\r\n          <aside className=\"tags\">\r\n            {\r\n              tags.map((tag, index) => (\r\n                <Tag key={index} taginfo={tags[index]} />\r\n              ))\r\n            }\r\n\r\n          </aside>\r\n\r\n        </div>\r\n\r\n\r\n        <div className=\"right\">\r\n          <aside className=\"host\"><h3>{logement.host.name} </h3> <img src={logement.host.picture} alt=\"\" />\r\n\r\n\r\n          </aside>\r\n          <div className=\"rate\">\r\n            <Star filled={rating >= 1} />\r\n            <Star filled={rating >= 2} />\r\n            <Star filled={rating >= 3} />\r\n            <Star filled={rating >= 4} />\r\n            <Star filled={rating >= 5} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"details\">\r\n        <Collapse subclass=\"prop\" keyword=\"Description\" content={logement.description} />\r\n        <Collapse subclass=\"prop\" keyword=\"Equipements\" content={equipements} />\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nProperty.propTypes = {\r\n  logement: PropTypes.shape({\r\n    id: PropTypes.string,\r\n    description:PropTypes.string,\r\n    equipments:PropTypes.array,\r\n    host:PropTypes.object,\r\n    location: PropTypes.string,\r\n    rating: PropTypes,\r\n    tags:PropTypes.array,\r\n    title: PropTypes.string,\r\n    \r\n  }).isRequired,\r\n}","import Property from './Property';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getLogement } from \"../dataretrieval\";\r\nimport { useState,useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n\r\nexport default function PropertyFetcher(){\r\n\r\n    const {id}= useParams();\r\n\r\n    const [logement, setLogement] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchlogement = () => {\r\n\r\n            try{\r\n                const data = getLogement(id);\r\n                setLogement(data);\r\n            }\r\n            catch(err){\r\n                setError(err.message)\r\n            }\r\n            finally{\r\n                setIsLoading(false)\r\n            }\r\n\r\n        }\r\n       fetchlogement();\r\n\r\n    },[]\r\n\r\n\r\n    )\r\n\r\n    \r\n    if (isLoading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        useNavigate(\"/Property/404\");\r\n    }\r\n\r\n    return(\r\n\r\n        <Property logement={logement}/>\r\n    )\r\n\r\n\r\n\r\n\r\n\r\n}"],"names":["Collapse","props","isOpen","setIsOpen","useState","content","Array","isArray","_jsxs","className","children","_jsx","keyword","concat","onClick","src","chevdown","alt","subclass","map","contentItem","index","Carousel","activeIndex","setActiveIndex","logement","pictures","previousItem","prevActiveIndex","length","nextItem","picture","title","FontAwesomeIcon","icon","faChevronLeft","faChevronRight","Star","filled","faStar","style","color","Tag","taginfo","Property","navigate","useNavigate","useEffect","undefined","equipements","equipments","equipement","tags","rating","location","tag","host","name","description","PropertyFetcher","id","useParams","setLogement","isLoading","setIsLoading","error","setError","fetchlogement","data","getLogement","err","message"],"sourceRoot":""}
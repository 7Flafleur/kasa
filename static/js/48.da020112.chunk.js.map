{"version":3,"file":"static/js/48.da020112.chunk.js","mappings":"uHAEe,SAASA,EAAQC,GAC5B,OACIC,EAAAA,EAAAA,KAAA,WAASC,GAAIF,EAAME,GAAIC,UAAU,SAAUC,MAAO,CAAEC,gBAAgB,OAADC,OAASN,EAAMO,IAAG,MAAMC,UAE3EP,EAAAA,EAAAA,KAAA,OAAKE,UAAU,gBAAeK,SACzBR,EAAMQ,YAInC,C,ufCJe,SAASC,EAAST,GAE7B,MAAOU,EAAOC,IAAaC,EAAAA,EAAAA,WAAS,GAG9BC,EAASC,MAAMC,QAAQf,EAAMa,SAAWb,EAAMa,QAAU,CAACb,EAAMa,SAQrE,OACIG,EAAAA,EAAAA,MAAA,MAAIb,UAAU,WAAUK,SAAA,EAEpBQ,EAAAA,EAAAA,MAAA,OAAKb,UAAU,WAAUK,SAAA,EAACP,EAAAA,EAAAA,KAAA,QAAME,UAAU,UAASK,SAAER,EAAMiB,WAC3DhB,EAAAA,EAAAA,KAAA,QAAME,UAAS,SAAAG,OAAWI,EAAS,UAAY,IAAMQ,QAT7D,WACIP,GAAWD,GACXS,QAAQC,IAAI,UAChB,EAMkFZ,UAClFP,EAAAA,EAAAA,KAAA,OAAKoB,IAAKC,EAAUC,IAAI,WAGnBtB,EAAAA,EAAAA,KAAA,OAAKE,UAAS,eAAAG,OAAiBN,EAAMwB,UAAWhB,SAC3CK,EAAQY,KAAI,CAACC,EAAYC,KAAW1B,EAAAA,EAAAA,KAAA,MAAiBE,UAAS,oBAAAG,OAAsBI,EAAQ,UAAY,UAAaF,SAAEkB,GAAzEC,SAO5D,C,0JCzBe,SAASC,IAEpB,MAAOC,EAAUC,IAAelB,EAAAA,EAAAA,UAAS,OAClCmB,EAAWC,IAAgBpB,EAAAA,EAAAA,WAAS,IACpCqB,EAAOC,IAAYtB,EAAAA,EAAAA,UAAS,MA0BnC,OAvBAuB,EAAAA,EAAAA,YAAU,KACgBC,WAElB,IACI,MAAMC,QAAaC,EAAAA,EAAAA,MACnBR,EAAYO,EAChB,CACA,MAAME,GACFL,EAASK,EAAIC,QACjB,CAAC,QAEGR,GAAa,EACjB,GAGJS,EAAe,GAEjB,IAMEV,GACO9B,EAAAA,EAAAA,KAAA,OAAAO,SAAK,eAGZyB,GACOhC,EAAAA,EAAAA,KAAA,OAAAO,SAAM,0BAIbQ,EAAAA,EAAAA,MAAA,OAAKb,UAAU,UAASK,SAAA,EACpBP,EAAAA,EAAAA,KAACF,EAAAA,EAAM,CAAEQ,IAAKmC,EAAMC,SAAS,MAC7B1C,EAAAA,EAAAA,KAAA,MAAIE,UAAU,qBAAoBK,SAC7BqB,EAASJ,KAAIR,IACVhB,EAAAA,EAAAA,KAAA,MAAIE,UAAU,qBAAoBK,UAC9BP,EAAAA,EAAAA,KAACQ,EAAAA,EAAQ,CAACe,SAAS,QAAQP,QAASA,EAASJ,SAAS+B,EAAAA,EAAAA,IAAW3B,GAASJ,WADtCI,SAS5D,C","sources":["components/Banner.jsx","components/Collapse.jsx","pages/Apropos.jsx"],"sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nexport default function Banner (props) {\r\n    return(\r\n        <section id={props.id} className=\"banner\"  style={{ backgroundImage: `url(${props.img})` }}>\r\n  \r\n                        <div className=\"banner_filter\">\r\n                            {props.children}\r\n                        </div>\r\n        </section>\r\n    )\r\n}\r\n\r\nBanner.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    img: PropTypes.string.isRequired,\r\n    children: PropTypes.node,\r\n};","import { useState } from \"react\";\r\nimport '../styles/collapse.scss'\r\nimport chevdown from \"../assets/chevdown.png\"\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\n\r\nexport default function Collapse(props){\r\n\r\n    const [isOpen,setIsOpen] = useState(false);\r\n\r\n         \r\n    const content= Array.isArray(props.content) ? props.content : [props.content]\r\n    \r\n\r\n    function handleClick() {\r\n        setIsOpen(!isOpen);\r\n        console.log(\"rotated\")\r\n    }\r\n\r\n    return(\r\n        <ul className=\"Collapse\">\r\n            {/* {isOpen ? \"The dropdown is open\" : \"The dropdown is closed\"} */}\r\n            <div className=\"dropdown\"><span className=\"keyword\">{props.keyword}</span>\r\n            <span className={`icons ${isOpen ? \"rotated\" : \"\"}`} onClick={handleClick}>\r\n    <img src={chevdown} alt=\"\" />\r\n</span>\r\n            </div>\r\n         <div className={`licontainer ${props.subclass}`} >\r\n             {content.map((contentItem,index )=> (<li  key={index} className={`collapse_content ${isOpen? \"visible\" : \"hidden\"  }`}>{contentItem}</li>\r\n             ))}\r\n         </div>\r\n        </ul>\r\n    )\r\n\r\n\r\n}\r\n\r\nCollapse.propTypes = {\r\n    content: PropTypes.oneOfType([\r\n        PropTypes.string,\r\n        PropTypes.arrayOf(PropTypes.string)\r\n    ]).isRequired,\r\n    keyword: PropTypes.string.isRequired,\r\n    subclass: PropTypes.string,\r\n};\r\n\r\n\r\n\r\n","import { useState,useEffect } from \"react\"\r\nimport Banner from \"../components/Banner\"\r\nimport img2 from \"../assets/im2.jpg\"\r\nimport Collapse from \"../components/Collapse\"\r\nimport { getKeywords, getContent } from '../dataretrieval'\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default function Apropos () {\r\n\r\n    const [keywords, setkeywords] = useState(null);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchkeywords = async () => {\r\n\r\n            try{\r\n                const data = await getKeywords();\r\n                setkeywords(data);\r\n            }\r\n            catch(err){\r\n                setError(err.message)\r\n            }\r\n            finally{\r\n                setIsLoading(false)\r\n            }\r\n\r\n        }\r\n        fetchkeywords();\r\n\r\n    },[]\r\n\r\n\r\n    )\r\n\r\n    \r\n    if (isLoading) {\r\n        return <div>Loading...</div>;\r\n    }\r\n\r\n    if (error) {\r\n        return <div >Contenu indisponible</div>;\r\n    }\r\n\r\n    return(\r\n        <div className=\"apropos\">\r\n            <Banner  img={img2} chezvouz=\"\" />\r\n            <ul className=\"Collapse_container\"  >\r\n                {keywords.map(keyword => (\r\n                    <li className=\"Collapse_component\" key={keyword}>\r\n                        <Collapse subclass=\"aprop\" keyword={keyword} content={getContent(keyword).content}/>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n\r\n    \r\n}"],"names":["Banner","props","_jsx","id","className","style","backgroundImage","concat","img","children","Collapse","isOpen","setIsOpen","useState","content","Array","isArray","_jsxs","keyword","onClick","console","log","src","chevdown","alt","subclass","map","contentItem","index","Apropos","keywords","setkeywords","isLoading","setIsLoading","error","setError","useEffect","async","data","getKeywords","err","message","fetchkeywords","img2","chezvouz","getContent"],"sourceRoot":""}